openapi: '3.0.0'
info:
  description: LabApp API
  version: '1.0.0'
  title: LabApp API
  contact:
    email: norberto9411@gmail.com
servers:
  - url: http://localhost:5000/{version}/lab
    variables:
      version:
        default: '1.0'
tags:
- name: record
  description: Sound record object
- name: recorder
  description: Sound recording device
- name: series
  description: Series of records

paths:
  /record:    
    get:
      tags:
        - record
      summary: Return records
      operationId: app.labapp_api.get_records
      parameters:
        - name: series_uid
          in: query
          description: Return records from specific series
          schema:
            type: array
            items:
              type: string
        - name: recorded_from
          in: query
          description: Starting recording datetime for records filtering
          schema:
            $ref: '#/components/schemas/DateTime'
        - name: recorded_to
          in: query
          description: Ending recording datetime for records filtering
          schema:
            $ref: '#/components/schemas/DateTime'
        - name: uploaded
          in: query
          description: Return only records, that has/hasn't been uploaded
          schema:
            type: boolean
        - name: label
          in: query
          description: Return records specifically labeled
          schema:
            type: array
            items:
              type: string
        - name: labeled
          in: query
          description: Return only records that are/aren't labeled
          schema:
            type: boolean
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Record'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
    post:
      tags:
        - record
      summary: Register a new record
      operationId: app.labapp_api.new_record
      requestBody:
        description: Record object that will be registered
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Record'
      parameters:
        - name: recorder_key
          in: header
          description: Unique recorder key for recorder authentication
          required: true
          schema:
            type: string
      responses:
        200:
          description: Record added successfuly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Record'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
  /record/{record_uid}:    
    get:
      tags:
        - record
      summary: Find record by UID and return
      operationId: app.labapp_api.get_record
      parameters:
        - name: record_uid
          in: path
          description: UID of record to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Record'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - record
      summary: Deletes a record
      operationId: app.labapp_api.delete_record
      parameters:
        - name: record_uid
          in: path
          description: Record uid to delete
          required: true
          schema:
            type: string
      responses:
        204:
          description: Record deleted successfuly.
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
  /record/{record_uid}/label:
    get:
      tags:
        - record
      summary: Get record label details
      operationId: app.labapp_api.get_records_label
      parameters:
        - name: record_uid
          in: path
          description: UID of record that file of will be downloaded
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - record
      summary: Update label of record
      operationId: app.labapp_api.update_records_label
      parameters:
        - name: record_uid
          in: path
          description: UID of record that file of will be downloaded
          required: true
          schema:
            type: string
        - name: label_uid
          in: query
          description: UID of label that will be given to the record
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Record'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
  /record/{record_uid}/parameters:
    get:
      tags:
        - record
      summary: Return recording parameters of record
      operationId: app.labapp_api.get_record_parameters
      parameters:
        - name: record_uid
          in: path
          description: UID of record that parameters will be returned
          required: true
          schema:
            type: string
      responses:
        200:
          description: Record parameters set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordingParameters'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
  /record/{record_uid}/download:
    get:
      tags:
        - record
      summary: Download sound record file
      operationId: app.labapp_api.download_record
      parameters:
        - name: record_uid
          in: path
          description: UID of record that file of will be downloaded
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            audio/wav:
              schema:
                type: string
                format: binary
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
  /record/{record_uid}/upload:
    post:
      tags:
        - record
      summary: Upload sound record file
      operationId: app.labapp_api.upload_record
      requestBody:
        content:
          audio/wav:
            schema:
              type: string
              format: binary
      parameters:
        - name: record_uid
          in: path
          description: UID of record that file of will be updated
          required: true
          schema:
            type: string
        - name: recorder_key
          in: header
          description: Unique recorder key for recorder authentication
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Record'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
  /recorder:    
    get:
      tags:
      - recorder
      summary: Return all recorders
      operationId: app.labapp_api.get_recorders
      parameters:
        - name: series_uid
          in: query
          description: Return recorders responsible for specific serieses
          schema:
            type: array
            items:
              type: string
        - name: created_from
          in: query
          description: Starting creation date for recorders filtering
          schema:
            $ref: '#/components/schemas/DateTime'
        - name: created_to
          in: query
          description: Ending creation date for recorders filtering
          schema:
            $ref: '#/components/schemas/DateTime'
        - name: busy
          in: query
          description: Returns only recorders with/without assigned current series
          schema:
            type: boolean
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recorder'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
    post:
      tags:
        - recorder
      summary: Register a new recorder to laboratory
      operationId: app.labapp_api.new_recorder
      requestBody:
        description: Recorder object to add to laboratory
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recorder'
            
      responses:
        200:
          description: Recorder added successfuly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recorder'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
  /recorder/{recorder_uid}:    
    get:
      tags:
      - recorder
      summary: Find recorder by UID and return
      operationId: app.labapp_api.get_recorder
      parameters:
      - name: recorder_uid
        in: path
        description: UID of recorder to return
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recorder'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - recorder
      summary: Update recorder
      operationId: app.labapp_api.update_recorder
      requestBody:
        description: Recorder object to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recorder'
      parameters:
        - name: recorder_uid
          in: path
          description: UID of recorder that will be updated
          required: true
          schema:
            type: string
      responses:
        200:
          description: Recorder updated successfuly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recorder'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
  /recorder/{recorder_uid}/current_series:
    get:
      tags:
        - recorder
      summary: Return series currently managed by recorder
      operationId: app.labapp_api.get_current_series
      parameters:
      - name: recorder_uid
        in: path
        description: UID of recorder
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Series'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - recorder
      summary: Set recorders current series
      operationId: app.labapp_api.set_current_series
      parameters:
        - name: recorder_uid
          in: path
          description: UID of recorder that will be updated
          required: true
          schema:
            type: string
        - name: series_uid
          in: query
          description: UID of series that will be set mainaned by recorder
          schema:
            type: string
      responses:
        200:
          description: Recorders current series updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Series'
        204:
          description: Recorders current series unset.
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
  /series:    
    get:
      tags:
        - series
      summary: Return all serieses
      operationId: app.labapp_api.get_serieses
      parameters:
        - name: recorder_uid
          in: query
          description: UID of recorder, that adds records to series
          schema:
            type: array
            items:
              type: string
        - name: parameters_uid
          in: query
          description: UID of recording parameters set used in series
          schema:
            type: array
            items:
              type: string
        - name: created_from
          in: query
          description: Starting date for serieses filtering
          schema:
            $ref: '#/components/schemas/DateTime'
        - name: created_to
          in: query
          description: Ending date for serieses filtering
          schema:
            $ref: '#/components/schemas/DateTime'
        - name: samplerate
          in: query
          description: Samplerate
          schema:
            type: array
            items:
              type: integer
        - name: channels
          in: query
          description: Number of channels
          schema:
            type: array
            items:
              type: integer
        - name: duration
          in: query
          description: Record duration
          schema:
            type: array
            items:
              type: number
        - name: amplification
          in: query
          description: Amplification
          schema:
            type: array
            items:
              type: number
        - name: is_active
          in: query
          description: Return serieses actively maintained by recorders
          schema:
            type: boolean
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Series'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
    post:
      tags:
        - series
      summary: Add a new series
      operationId: app.labapp_api.new_series
      requestBody:
        description: Series object that will be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Series'
      responses:
        200:
          description: Series added successfuly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Series'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        405:
          $ref: '#/components/responses/MethodNotAllowed'
  /series/{series_uid}:    
    get:
      tags:
        - series
      summary: Find series by UID and return
      operationId: app.labapp_api.get_series
      parameters:
        - name: series_uid
          in: path
          description: UID of series to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Series'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - series
      summary: Update series
      operationId: app.labapp_api.update_series
      requestBody:
        description: Series object that will be updated
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  nullable: true
                recorder_uid:
                  type: string
                  nullable: true
      parameters:
        - name: series_uid
          in: path
          description: UID of series that will be updated
          required: true
          schema:
            type: string
      responses:
        200:
          description: Series added successfuly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Series'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - series
      summary: Deletes a series
      operationId: app.labapp_api.delete_series
      parameters:
      - name: series_uid
        in: path
        description: Series uid to delete
        required: true
        schema:
          type: string
      responses:
        204:
          $ref: '#/components/responses/NoContent'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
  /series/{series_uid}/parameters:    
    get:
      tags:
        - series
      summary: Get series recording parameters
      operationId: app.labapp_api.get_series_parameters
      parameters:
        - name: series_uid
          in: path
          description: UID of series to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordingParameters'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - series
      summary: Update series recording parameters
      operationId: app.labapp_api.update_series_parameters
      requestBody:
        description: Parameters object or parameters uid
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecordingParameters"
      parameters:
        - name: series_uid
          in: path
          description: UID of series that parameters will be updated
          required: true
          schema:
            type: string
      responses:
        200:
          description: Series parameters upadted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordingParameters'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/NotPermitted'
        404:
          $ref: '#/components/responses/NotFound'


components:

  responses:
    NoContent:
      description: NoContent
    BadRequest:
      description: Bad request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotPermitted:
      description: Operation not permitted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Specified resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    MethodNotAllowed:
      description: Method is not allowed for this type of input.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Label:
      type: object
      required:
        - uid
      properties:
        uid:
          type: string
        created_at:
          $ref: '#/components/schemas/DateTime'
          readOnly: true
        description:
          type: string
    Record:
      type: object
      required:
        - series_uid
        - start_time
      properties:
        uid:
          type: string
          format: uuid
        created_at:
          $ref: '#/components/schemas/DateTime'
          readOnly: true
        series_uid:
          type: string
        label_uid:
          type: string
          nullable: true
        start_time:
          type: number
        stop_time:
          type: number
        uploaded_at:
          type: string
          format: date-time
          nullable: true
          readOnly: true
    Recorder:
      type: object
      properties:
        uid:
          type: string
        created_at:
          $ref: '#/components/schemas/DateTime'
          readOnly: true
        location_description:
          type: string
          nullable: true
        current_series:
          type: string
          nullable: true
          readOnly: true
    RecordingParameters:
      type: object
      properties:
        uid:
          type: string
        created_at:
          $ref: '#/components/schemas/DateTime'
          readOnly: true
        samplerate:
          type: integer
        channels:
          type: integer
        duration:
          type: number
        amplification:
          type: number
    Series:
      type: object
      required:
        - recorder_uid
        - parameters
      properties:
        uid:
          type: string
        created_at:
          $ref: '#/components/schemas/DateTime'
          readOnly: true
        description:
          type: string
        recorder_uid:
          type: string
        parameters:
          $ref: '#/components/schemas/RecordingParameters'
        is_active:
          type: boolean
          readOnly: true
    Error:
      type: object
      properties:
        detail:
          type: string
    DateTime:
      type: string
      format: date-time
      example: 2018-11-26T12:34:56
